<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>erorrs on Madhav Khosla</title><link>https://madhavkhoslaa.github.io/tags/erorrs/</link><description>Recent content in erorrs on Madhav Khosla</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 08 Jun 2023 02:01:58 +0530</lastBuildDate><atom:link href="https://madhavkhoslaa.github.io/tags/erorrs/index.xml" rel="self" type="application/rss+xml"/><item><title>Error handling in Rust.</title><link>https://madhavkhoslaa.github.io/posts/errors/</link><pubDate>Thu, 08 Jun 2023 02:01:58 +0530</pubDate><guid>https://madhavkhoslaa.github.io/posts/errors/</guid><description>Types of Errors Unrecoverable Errors Recoverable Errors How to handle unrecoverable Errors. These errors are errors that make you want to stop the execution of the program. Like not being able to find a free port for starting the server, division by zero. These errors use the panic macro to stop the execution of the program in rust.
Example of panic macro. fn main(){ let a = 5; let b = 0; let c = divide(a, b); println!</description></item></channel></rss>