<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Madhav Khosla</title><link>https://madhavkhoslaa.github.io/tags/rust/</link><description>Recent content in Rust on Madhav Khosla</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Sep 2022 02:01:58 +0530</lastBuildDate><atom:link href="https://madhavkhoslaa.github.io/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Functional Programming in Rust 1: Closures</title><link>https://madhavkhoslaa.github.io/draft/functionalrust/</link><pubDate>Wed, 14 Sep 2022 02:01:58 +0530</pubDate><guid>https://madhavkhoslaa.github.io/draft/functionalrust/</guid><description>What is Functional Programming ? It is a Programming Paradigm where you use functions to solve what you are building. Most common features that you might have used FP in any language will be Map and Reduce. Where you pass in a function what iterates in the collection you run map or reduce on.
Rust has some functional features too that I plan to write here.
Closures Let&amp;rsquo;s do a quick Google search &amp;ldquo;closures&amp;rdquo;; The first result that comes to me is from MDN.</description></item><item><title>Understanding Rust Ownership</title><link>https://madhavkhoslaa.github.io/posts/rustownership/</link><pubDate>Sun, 03 Jul 2022 02:01:58 +0530</pubDate><guid>https://madhavkhoslaa.github.io/posts/rustownership/</guid><description>Ownership is one of the features that make it different than so many programming languages and what makes it memory safe and a good language for concurrent programming. It solves problems like null pointers, dangling pointers and data races without a garbage collector at the run time.
Understanding Rust Ownership How is data stored in the program? Stack Heap Data(variables in function arguments and defined) in the stack have a known type hence the size of the data in the stack is known at the time of compilation.</description></item></channel></rss>