<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Iterator Design Pattern on Madhav Khosla</title><link>https://madhavkhoslaa.github.io/tags/iterator-design-pattern/</link><description>Recent content in Iterator Design Pattern on Madhav Khosla</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 20 Nov 2022 23:01:35 +0530</lastBuildDate><atom:link href="https://madhavkhoslaa.github.io/tags/iterator-design-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Functional Programming in Rust 2: Iterators</title><link>https://madhavkhoslaa.github.io/posts/rustiter/</link><pubDate>Sun, 20 Nov 2022 23:01:35 +0530</pubDate><guid>https://madhavkhoslaa.github.io/posts/rustiter/</guid><description>Iterator Design Pattern, What is it? Example 1 Let&amp;rsquo;s consider you are this tiny person in the image and you have to walk traverse the tree below. Ideally, how you traverse it, it does not matter what is the most important thing is 1. where you are and 2. Where you want to be when you go to the next node.
So in a way, an iterator design pattern(in real life) is a thought process of how you iterate a structure(not just a tree), or you know where you want(not how) to go next.</description></item><item><title>Static and Dynamic Dispatch in Rust</title><link>https://madhavkhoslaa.github.io/draft/dyn/</link><pubDate>Mon, 27 Jun 2022 02:01:58 +0530</pubDate><guid>https://madhavkhoslaa.github.io/draft/dyn/</guid><description>Static and Dynamic Dispatch in Rust</description></item></channel></rss>